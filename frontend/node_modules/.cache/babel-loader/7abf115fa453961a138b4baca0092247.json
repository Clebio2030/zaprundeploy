{"ast":null,"code":"import React,{useState,useRef,useEffect}from\"react\";import{makeStyles}from\"@material-ui/core/styles\";import{IconButton,Typography,LinearProgress,Box}from\"@material-ui/core\";import PlayArrowIcon from\"@material-ui/icons/PlayArrow\";import PauseIcon from\"@material-ui/icons/Pause\";import{Howl}from'howler';const useStyles=makeStyles(theme=>({audioContainer:{display:\"flex\",flexDirection:\"column\",width:\"100%\",maxWidth:250,backgroundColor:\"transparent\",borderRadius:8,padding:theme.spacing(0.5),border:\"none\",overflow:\"hidden\"},playerControls:{display:\"flex\",alignItems:\"center\",backgroundColor:theme.palette.type===\"dark\"?\"rgba(60, 60, 60, 0.7)\":\"rgba(255, 255, 255, 0.7)\",borderRadius:24,padding:theme.spacing(0.5),boxShadow:\"0px 1px 3px rgba(0, 0, 0, 0.08)\"},playButton:{padding:6,color:theme.palette.primary.main},progressContainer:{display:\"flex\",flexDirection:\"column\",flex:1,marginLeft:theme.spacing(1),marginRight:theme.spacing(1)},progressBar:{height:4,borderRadius:2,marginBottom:4,backgroundColor:\"rgba(0, 0, 0, 0.1)\",\"& .MuiLinearProgress-bar\":{backgroundColor:theme.palette.primary.main}},timeInfo:{display:\"flex\",justifyContent:\"space-between\",alignItems:\"center\"},timeText:{fontSize:10,color:theme.palette.text.secondary,fontWeight:500},audioIcon:{fontSize:20,color:theme.palette.primary.main,marginRight:theme.spacing(1)}}));const formatTime=seconds=>{// Verificar se o valor é válido\nif(seconds===undefined||seconds===null||!isFinite(seconds)||isNaN(seconds)){return\"00:00\";}// Garantir que seja um número positivo\nconst safeSeconds=Math.max(0,Number(seconds));const mins=Math.floor(safeSeconds/60);const secs=Math.floor(safeSeconds%60);return\"\".concat(mins.toString().padStart(2,\"0\"),\":\").concat(secs.toString().padStart(2,\"0\"));};// Verificar se é dispositivo iOS\nconst isIOS=()=>{const userAgent=navigator.userAgent||navigator.vendor||window.opera;return /iPad|iPhone|iPod/.test(userAgent)&&!window.MSStream||navigator.platform==='MacIntel'&&navigator.maxTouchPoints>1&&!window.MSStream;};// Função para obter URL completa\nconst getFullUrl=url=>{if(!url)return\"\";// Verificar se o URL já é um objeto blob\nif(url.startsWith('blob:')){return url;}// Se a URL já começa com http ou https, retornar como está\nif(url.startsWith('http://')||url.startsWith('https://')){return url;}// Se a URL é relativa, adicionar o endereço do backend\nconst BACKEND_URL=process.env.REACT_APP_BACKEND_URL||window.location.origin;// Se começa com '/', removemos a barra para evitar duplicação\nconst cleanUrl=url.startsWith('/')?url.substring(1):url;// Verificar se já contém o prefixo público antes de adicioná-lo\nconst urlWithPublic=cleanUrl.startsWith('public/')?cleanUrl:\"public/\".concat(cleanUrl);// Construir a URL completa\nreturn\"\".concat(BACKEND_URL,\"/\").concat(urlWithPublic);};export default function ChatAudioPlayer(_ref){let{audioUrl,duration,isRight}=_ref;const classes=useStyles();const[isPlaying,setIsPlaying]=useState(false);const[currentTime,setCurrentTime]=useState(0);const[audioDuration,setAudioDuration]=useState(duration||0);const[isLoading,setIsLoading]=useState(false);const[error,setError]=useState(null);const[howlerSound,setHowlerSound]=useState(null);const progressInterval=useRef(null);// Função para criar nova instância do Howl\nconst createSound=url=>{// Limpar qualquer instância anterior\nif(howlerSound){howlerSound.unload();}setIsLoading(true);setError(null);// Criar nova instância do Howl com a URL fornecida\nconst sound=new Howl({src:[url],html5:true,// Forçar HTML5 Audio para maior compatibilidade\nformat:['mp3','mp4','aac','wav','webm'],preload:true,onload:()=>{setIsLoading(false);// Atualizar duração se válida\nconst duration=sound.duration();if(duration&&isFinite(duration)&&duration>0){setAudioDuration(duration);}console.log('[DEBUG] Áudio carregado com duração:',duration);},onloaderror:(id,error)=>{setIsLoading(false);setError(\"Erro ao carregar áudio\");console.error('[ERROR] Howler - erro ao carregar:',error);},onplayerror:(id,error)=>{setIsLoading(false);setError(\"Erro ao reproduzir\");console.error('[ERROR] Howler - erro ao reproduzir:',error);// No iOS, tentar uma abordagem de desbloqueio\nif(isIOS()){const unlockiOS=()=>{// Criar um som silencioso para desbloquear áudio\nconst unlockSound=new Howl({src:['data:audio/mp3;base64,SUQzBAAAAAAAI1RTU0UAAAAPAAADTGF2ZjU4LjI5LjEwMAAAAAAAAAAAAAAA//tQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWGluZwAAAA8AAAACAAADQgD///////////////////////////////////////////8AAAA8TEFNRTMuMTAwBK8AAAAAAAAAABSAJAJAQgAAgAAAA0JpibQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//sQZAAP8AAAaQAAAAgAAA0gAAABAAABpAAAACAAADSAAAAETEFNRTMuMTAwVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV'],volume:0.1});unlockSound.play();// Remover o evento após desbloquear\ndocument.body.removeEventListener('touchstart',unlockiOS);document.body.removeEventListener('click',unlockiOS);// Tentar iniciar o áudio novamente após desbloqueio\nif(howlerSound){howlerSound.play();startProgressTracking();setIsPlaying(true);}};// Adicionar evento para desbloquear áudio no próximo toque/clique\ndocument.body.addEventListener('touchstart',unlockiOS,false);document.body.addEventListener('click',unlockiOS,false);}},onend:()=>{setIsPlaying(false);setCurrentTime(0);clearInterval(progressInterval.current);}});return sound;};// Inicializar o áudio quando a URL muda\nuseEffect(()=>{if(audioUrl){const fullUrl=getFullUrl(audioUrl);console.log('[DEBUG] Carregando áudio:',fullUrl);const sound=createSound(fullUrl);setHowlerSound(sound);}return()=>{// Limpar quando o componente for desmontado\nif(howlerSound){howlerSound.unload();}clearInterval(progressInterval.current);};},[audioUrl]);// Iniciar rastreamento de progresso durante a reprodução\nconst startProgressTracking=()=>{clearInterval(progressInterval.current);progressInterval.current=setInterval(()=>{if(howlerSound&&howlerSound.playing()){setCurrentTime(howlerSound.seek());}},100);};// Função para alternar reprodução\nconst togglePlayback=()=>{if(!howlerSound)return;if(isPlaying){// Pausar\nhowlerSound.pause();clearInterval(progressInterval.current);setIsPlaying(false);}else{// Reproduzir\nsetError(null);howlerSound.play();startProgressTracking();setIsPlaying(true);}};return/*#__PURE__*/React.createElement(Box,{className:classes.audioContainer,style:{alignSelf:isRight?\"flex-end\":\"flex-start\"}},/*#__PURE__*/React.createElement(\"div\",{className:classes.playerControls},/*#__PURE__*/React.createElement(IconButton,{className:classes.playButton,onClick:togglePlayback,disabled:isLoading,size:\"small\"},isPlaying?/*#__PURE__*/React.createElement(PauseIcon,{fontSize:\"small\"}):/*#__PURE__*/React.createElement(PlayArrowIcon,{fontSize:\"small\"})),/*#__PURE__*/React.createElement(\"div\",{className:classes.progressContainer},/*#__PURE__*/React.createElement(LinearProgress,{className:classes.progressBar,variant:\"determinate\",value:audioDuration>0?currentTime/audioDuration*100:0}),/*#__PURE__*/React.createElement(\"div\",{className:classes.timeInfo},/*#__PURE__*/React.createElement(Typography,{className:classes.timeText,variant:\"caption\"},formatTime(currentTime)),/*#__PURE__*/React.createElement(Typography,{className:classes.timeText,variant:\"caption\"},error?error:isLoading?\"Carregando...\":formatTime(audioDuration))))));}","map":null,"metadata":{},"sourceType":"module"}