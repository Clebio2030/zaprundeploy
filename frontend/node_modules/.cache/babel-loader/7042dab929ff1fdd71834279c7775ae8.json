{"ast":null,"code":"import axios from\"axios\";const api=axios.create({baseURL:process.env.REACT_APP_BACKEND_URL,withCredentials:true});// Interceptador para requisições com upload de arquivos (FormData)\napi.interceptors.request.use(config=>{// Verifica se a requisição contém FormData para configuar o Content-Type apropriado\nif(config.data instanceof FormData){Object.assign(config.headers,{'Content-Type':'multipart/form-data'});}return config;});// Interceptador para respostas para tratamento de erros\napi.interceptors.response.use(response=>{return response;},error=>{// Manter apenas erro crítico para produção\nif(process.env.NODE_ENV==='development'){var _error$config,_error$config$method,_error$config2,_error$response,_error$response2;console.error(\"[API ERROR] \".concat((_error$config=error.config)===null||_error$config===void 0?void 0:(_error$config$method=_error$config.method)===null||_error$config$method===void 0?void 0:_error$config$method.toUpperCase(),\" \").concat((_error$config2=error.config)===null||_error$config2===void 0?void 0:_error$config2.url,\": \").concat(error.message),(_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status,(_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.data);}return Promise.reject(error);});export const openApi=axios.create({baseURL:process.env.REACT_APP_BACKEND_URL});export default api;","map":null,"metadata":{},"sourceType":"module"}