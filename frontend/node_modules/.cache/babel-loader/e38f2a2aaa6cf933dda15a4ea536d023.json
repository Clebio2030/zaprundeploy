{"ast":null,"code":"import React,{useRef,useState}from'react';import{makeStyles}from'@material-ui/core/styles';import{IconButton,Tooltip,CircularProgress,Dialog,DialogTitle,DialogContent,DialogActions,Button,Typography,List,ListItem,ListItemIcon,ListItemText,ListItemSecondaryAction,LinearProgress}from'@material-ui/core';import AttachFileIcon from'@material-ui/icons/AttachFile';import ImageIcon from'@material-ui/icons/Image';import InsertDriveFileIcon from'@material-ui/icons/InsertDriveFile';import PictureAsPdfIcon from'@material-ui/icons/PictureAsPdf';import DeleteIcon from'@material-ui/icons/Delete';import CloseIcon from'@material-ui/icons/Close';const useStyles=makeStyles(theme=>({root:{display:'flex',alignItems:'center'},input:{display:'none'},fileList:{width:'100%',maxHeight:300,overflow:'auto','& .MuiListItem-root':{borderBottom:\"1px solid \".concat(theme.palette.divider)}},fileIcon:{minWidth:40},fileSize:{color:theme.palette.text.secondary,fontSize:12},errorText:{color:theme.palette.error.main,marginTop:theme.spacing(1)},progressContainer:{width:'100%',marginTop:theme.spacing(2)}}));// Função para formatar o tamanho do arquivo\nconst formatFileSize=bytes=>{if(bytes<1024){return bytes+' B';}else if(bytes<1024*1024){return(bytes/1024).toFixed(1)+' KB';}else{return(bytes/(1024*1024)).toFixed(1)+' MB';}};// Função para obter o ícone correto com base no tipo de arquivo\nconst getFileIcon=fileName=>{if(!fileName)return/*#__PURE__*/React.createElement(InsertDriveFileIcon,null);const extension=fileName.split('.').pop().toLowerCase();if(['jpg','jpeg','png','gif'].includes(extension)){return/*#__PURE__*/React.createElement(ImageIcon,{color:\"primary\"});}else if(extension==='pdf'){return/*#__PURE__*/React.createElement(PictureAsPdfIcon,{color:\"error\"});}else{return/*#__PURE__*/React.createElement(InsertDriveFileIcon,null);}};const ChatFileUpload=_ref=>{let{onFilesSelected,disabled=false}=_ref;const classes=useStyles();const fileInputRef=useRef(null);const[selectedFiles,setSelectedFiles]=useState([]);const[openDialog,setOpenDialog]=useState(false);const[errors,setErrors]=useState([]);const[isUploading,setIsUploading]=useState(false);const[uploadProgress,setUploadProgress]=useState(0);// Configurações de validação\nconst MAX_FILE_SIZE=10*1024*1024;// 10MB\nconst MAX_FILES=5;const ALLOWED_TYPES=['jpg','jpeg','png','gif','pdf','docx','xlsx','mp4'];const handleFileSelect=()=>{fileInputRef.current.click();};const validateFiles=files=>{const errorMessages=[];const validFiles=[];Array.from(files).forEach(file=>{const fileExtension=file.name.split('.').pop().toLowerCase();// Verificar tipo de arquivo\nif(!ALLOWED_TYPES.includes(fileExtension)){errorMessages.push(\"Arquivo \\\"\".concat(file.name,\"\\\" n\\xE3o \\xE9 permitido. Formatos aceitos: \").concat(ALLOWED_TYPES.join(', ')));return;}// Verificar tamanho\nif(file.size>MAX_FILE_SIZE){errorMessages.push(\"Arquivo \\\"\".concat(file.name,\"\\\" excede o limite de 10MB\"));return;}validFiles.push(file);});// Verificar número máximo de arquivos\nif(selectedFiles.length+validFiles.length>MAX_FILES){errorMessages.push(\"M\\xE1ximo de \".concat(MAX_FILES,\" arquivos permitidos por mensagem\"));return{validFiles:[],errors:errorMessages};}return{validFiles,errors:errorMessages};};const handleFileChange=event=>{const files=event.target.files;if(files.length>0){const{validFiles,errors}=validateFiles(files);setErrors(errors);if(validFiles.length>0){setSelectedFiles(prev=>[...prev,...validFiles]);setOpenDialog(true);}else if(errors.length>0){setOpenDialog(true);}}// Limpar input para permitir selecionar o mesmo arquivo novamente\nevent.target.value=null;};const handleRemoveFile=index=>{setSelectedFiles(prev=>prev.filter((_,i)=>i!==index));};const handleCloseDialog=()=>{if(selectedFiles.length===0){setOpenDialog(false);setErrors([]);}};const handleConfirm=()=>{if(selectedFiles.length>0){onFilesSelected(selectedFiles,progress=>{setIsUploading(true);setUploadProgress(progress);},()=>{setIsUploading(false);setSelectedFiles([]);setOpenDialog(false);setErrors([]);setUploadProgress(0);});}else{setOpenDialog(false);setErrors([]);}};return/*#__PURE__*/React.createElement(\"div\",{className:classes.root},/*#__PURE__*/React.createElement(\"input\",{accept:\"image/*,application/pdf,application/vnd.openxmlformats-officedocument.wordprocessingml.document,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,video/mp4\",className:classes.input,id:\"file-upload-button\",multiple:true,type:\"file\",ref:fileInputRef,onChange:handleFileChange,disabled:disabled}),/*#__PURE__*/React.createElement(Tooltip,{title:\"Anexar arquivo\"},/*#__PURE__*/React.createElement(\"span\",null,/*#__PURE__*/React.createElement(IconButton,{color:\"primary\",\"aria-label\":\"upload file\",component:\"span\",onClick:handleFileSelect,disabled:disabled},isUploading?/*#__PURE__*/React.createElement(CircularProgress,{size:24}):/*#__PURE__*/React.createElement(AttachFileIcon,null)))),/*#__PURE__*/React.createElement(Dialog,{open:openDialog,onClose:handleCloseDialog,\"aria-labelledby\":\"file-upload-dialog-title\",maxWidth:\"sm\",fullWidth:true},/*#__PURE__*/React.createElement(DialogTitle,{id:\"file-upload-dialog-title\"},\"Anexar Arquivos\",/*#__PURE__*/React.createElement(IconButton,{\"aria-label\":\"close\",onClick:handleCloseDialog,style:{position:'absolute',right:8,top:8}},/*#__PURE__*/React.createElement(CloseIcon,null))),/*#__PURE__*/React.createElement(DialogContent,null,errors.length>0&&/*#__PURE__*/React.createElement(\"div\",{className:classes.errorText},errors.map((error,index)=>/*#__PURE__*/React.createElement(Typography,{key:index,variant:\"body2\",color:\"error\"},error))),selectedFiles.length>0&&/*#__PURE__*/React.createElement(List,{className:classes.fileList},selectedFiles.map((file,index)=>/*#__PURE__*/React.createElement(ListItem,{key:index},/*#__PURE__*/React.createElement(ListItemIcon,{className:classes.fileIcon},getFileIcon(file.name)),/*#__PURE__*/React.createElement(ListItemText,{primary:file.name,secondary:/*#__PURE__*/React.createElement(\"span\",{className:classes.fileSize},formatFileSize(file.size))}),/*#__PURE__*/React.createElement(ListItemSecondaryAction,null,/*#__PURE__*/React.createElement(IconButton,{edge:\"end\",\"aria-label\":\"delete\",onClick:()=>handleRemoveFile(index)},/*#__PURE__*/React.createElement(DeleteIcon,null)))))),isUploading&&/*#__PURE__*/React.createElement(\"div\",{className:classes.progressContainer},/*#__PURE__*/React.createElement(Typography,{variant:\"body2\",gutterBottom:true},\"Enviando arquivos: \",uploadProgress,\"%\"),/*#__PURE__*/React.createElement(LinearProgress,{variant:\"determinate\",value:uploadProgress}))),/*#__PURE__*/React.createElement(DialogActions,null,/*#__PURE__*/React.createElement(Button,{onClick:handleCloseDialog,color:\"primary\",disabled:isUploading},\"Cancelar\"),/*#__PURE__*/React.createElement(Button,{onClick:handleConfirm,color:\"primary\",variant:\"contained\",disabled:selectedFiles.length===0||isUploading},\"Enviar\"))));};export default ChatFileUpload;","map":null,"metadata":{},"sourceType":"module"}